(()=>{"use strict";Object.defineProperty;const e=()=>{const t=function(e){"string"==typeof e&&(e={url:e,method:"GET"});const{url:t,method:n="GET",data:a,headers:s={},timeout:r=0,params:o,responseType:i="json",baseURL:l="",validateStatus:c=(e=>e>=200&&e<300)}=e;let u=l?l+t:t;if(o){const e=new URLSearchParams(o);u+=(u.includes("?")?"&":"?")+e.toString()}const h={method:n.toUpperCase(),headers:new Headers(s)};if(a&&!["GET","HEAD"].includes(h.method))if("string"==typeof a)h.body=a;else if(a instanceof FormData)h.body=a;else if(a instanceof URLSearchParams){h.body=a;const e=h.headers;e.get("content-type")||e.set("content-type","application/x-www-form-urlencoded")}else if(a instanceof ArrayBuffer||a instanceof Uint8Array)h.body=a;else{h.body=JSON.stringify(a);const e=h.headers;e.get("content-type")||e.set("content-type","application/json")}const d=new AbortController;h.signal=d.signal;let m=null;return r>0&&(m=setTimeout((()=>d.abort()),r)),fetch(u,h).then((t=>{let n;switch(m&&clearTimeout(m),i){case"text":n=t.text();break;case"blob":n=t.blob();break;case"arraybuffer":n=t.arrayBuffer();break;default:n=t.text().then((e=>{try{return e?JSON.parse(e):{}}catch{return e}}))}return n.then((n=>{const a={},s=t.headers;s&&"function"==typeof s.forEach&&s.forEach(((e,t)=>{a[t]=e}));const r={data:n,status:t.status,statusText:t.statusText,headers:a,config:e,request:{}};if(!c(t.status)){const n=new Error(`Request failed with status ${t.status}`);throw n.config=e,n.response=r,n.code=t.status>=500?"ECONNABORTED":"ERR_BAD_REQUEST",n}return r}))})).catch((t=>{if(m&&clearTimeout(m),"AbortError"===t.name){const t=new Error(`Request timeout after ${r}ms`);throw t.config=e,t.code="ECONNABORTED",{errorType:"NET_ERR",errorCode:0,errorMsg:t.message}}throw t.response?{errorType:"NET_ERR",errorCode:t.response.status||0,errorMsg:t.message||"Request failed"}:{errorType:"NET_ERR",errorCode:0,errorMsg:t.message||"Network Error"}}))};return t.get=(e,n={})=>t({...n,url:e,method:"GET"}),t.post=(e,n,a={})=>t({...a,url:e,data:n,method:"POST"}),t.put=(e,n,a={})=>t({...a,url:e,data:n,method:"PUT"}),t.patch=(e,n,a={})=>t({...a,url:e,data:n,method:"PATCH"}),t.delete=(e,n={})=>t({...n,url:e,method:"DELETE"}),t.head=(e,n={})=>t({...n,url:e,method:"HEAD"}),t.options=(e,n={})=>t({...n,url:e,method:"OPTIONS"}),t.defaults={headers:{common:{Connection:"keep-alive","Keep-Alive":"timeout=30, max=100"},get:{Accept:"application/json, text/plain, */*"},post:{"Content-Type":"application/json",Accept:"application/json, text/plain, */*"},put:{"Content-Type":"application/json",Accept:"application/json, text/plain, */*"},patch:{"Content-Type":"application/json",Accept:"application/json, text/plain, */*"}},timeout:6e3,responseType:"json",baseURL:"",validateStatus:e=>e>=200&&e<300},t.interceptors={request:{use:()=>{},eject:()=>{}},response:{use:()=>{},eject:()=>{}}},t.create=(t={})=>{const n=e();return Object.assign(n.defaults,t),n},t.isAxiosError=e=>e&&("NET_ERR"===e.errorType||e.config&&e.code),t};e();const t={en:"English","zh-CN":"ChineseSimplified","zh-TW":"ChineseTraditional",fr:"French",es:"Spanish",ru:"Russian",ar:"Arabic",de:"German",ja:"Japanese",pt:"Portuguese",hi:"Hindi",ur:"Urdu",ko:"Korean",ach:"Achinese",af:"Afrikaans",aka:"Akan",sq:"Albanian",am:"Amharic",arg:"Aragonese",hy:"Armenian",asm:"Assamese",ast:"Asturian",aym:"Aymara",az:"Azerbaijani",bal:"Baluchi",sun:"BasaSunda",bak:"Bashkir",eu:"Basque",be:"Belarusian",bem:"Bemba",bn:"Bengali",ber:"Berberlanguages",bho:"Bhojpuri",bis:"Bislama",bli:"Blin",nob:"Bokmal",bs:"Bosnian",bre:"Breton",bg:"Bulgarian",bur:"Burmese",yue:"Cantonese",ca:"Catalan",ceb:"Cebuano",chr:"Cherokee",ny:"Chichewa",chv:"Chuvash",wyw:"ClassicalChinese",cor:"Cornish",co:"Corsican",cre:"Creek",cri:"CrimeanTatar",hr:"Croatian",cs:"Czech",da:"Danish",prs:"Dari",div:"Divehi",nl:"Dutch",eo:"Esperanto",et:"Estonian",fao:"Faroese",fj:"Fiji",fil:"Filipino",fi:"Finnish",fy:"Frisian",fri:"Friulian",ful:"Fulani",gla:"Gaelic",gl:"Galician",ka:"Georgian",el:"Greek",grn:"Guarani",gu:"Gujarati",ht:"HaitianCreole",hak:"HakhaChin",ha:"Hausa",haw:"Hawaiian",he:"Hebrew",hil:"Hiligaynon",hmn:"Hmong",hu:"Hungarian",hup:"Hupa",is:"Icelandic",ido:"Ido",ig:"Igbo",id:"Indonesian",ing:"Ingush",ina:"interlingua",iku:"Inuktitut",ga:"Irish",it:"Italian",jw:"Javanese",kab:"Kabyle",kal:"Kalaallisut",kn:"Kannada",kau:"Kanuri",kas:"Kashmiri",kah:"Kashubian",kk:"Kazakh",km:"Khmer",kin:"Kinyarwanda",tlh:"Klingon",kon:"Kongo",kok:"Konkani",ku:"Kurdish",kmr:"KurdishNorthern",ky:"Kyrgyz",lo:"Lao",lag:"Latgalian",la:"Latin",lv:"Latvian",lim:"Limburgish",lin:"Lingala",lt:"Lithuanian",loj:"Lojban",lug:"Luganda",lb:"Luxembourgish",mk:"Macedonian",mai:"Maithili",mg:"Malagasy",ms:"Malay",ml:"Malayalam",mt:"Maltese",glv:"Manx",mi:"Maori",mr:"Marathi",mah:"Marshallese",mau:"MauritianCreole",frm:"MiddleFrench",mn:"Mongolian",mot:"Montenegrin",my:"Myanmar",nea:"Neapolitan",ne:"Nepali",sme:"NorthernSami",ped:"NorthernSotho",no:"Norwegian",nno:"Nynorsk",oci:"Occitan",oji:"Ojibwa",eno:"OldEnglish",or:"Oriya",orm:"Oromo",oss:"Ossetian",pam:"Pampanga",pap:"Papiamento",ps:"Pashto",fa:"Persian",pl:"Polish",pa:"Punjabi",que:"Quechua",otq:"QueretaroOttomi",ro:"Romanian",roh:"Romansh",rom:"Romany",ruy:"Rusyn",sm:"Samoan",san:"Sanskrit",srd:"Sardinian",sco:"Scots",gd:"ScotsGaelic",src:"SerbCyrillic",sr:"Serbian","sr-Cyrl":"SerbianCyrillic","sr-Latn":"SerbianLatin",sec:"SerboCroatian",st:"Sesotho",sha:"Shan",sn:"Shona",sil:"Silesian",sd:"Sindhi",si:"Sinhala",sk:"Slovak",sl:"Slovenian",so:"Somali",sol:"Songhailanguages",nbl:"SouthernNdebele",sot:"SouthernSotho",su:"Sundanese",sw:"Swahili",sv:"Swedish",syr:"Syriac",tgl:"Tagalog",ty:"Tahiti",tg:"Tajik",ta:"Tamil",tat:"Tatar",te:"Telugu",tet:"Tetum",th:"Thai",tir:"Tigrinya",to:"Tongan",tso:"Tsonga",tr:"Turkish",tuk:"Turkmen",twi:"Twi",ug:"Uyghur",uk:"Ukrainian",ups:"UpperSorbian",uz:"Uzbek",ven:"Venda",vi:"Vietnamese",wln:"Walloon",cy:"Welsh",fry:"WesternFrisian",wol:"Wolof",xh:"Xhosa",yi:"Yiddish",yo:"Yoruba",yua:"YukatanMayan",zaz:"Zaza",zu:"Zulu"},n={blacklist:{urls:{},domains:{"chrome.google.com":!0,extensions:!0}},LayoutSettings:{Resize:!1,RTL:!1,FoldLongContent:!0,SelectTranslatePosition:"TopRight"},languageSetting:{sl:"auto",tl:{ach:"ach",ady:"en",af:"af","af-NA":"af","af-ZA":"af",ak:"aka",am:"am",ar:"ar","ar-AR":"ar","ar-MA":"ar","ar-SA":"ar","ay-BO":"aym",az:"az","az-AZ":"az","be-BY":"be",bg:"bg","bg-BG":"bg",bn:"bn","bn-IN":"bn","bn-BD":"bn","bs-BA":"bs",ca:"ca","ca-ES":"ca",cak:"en",ceb:"ceb","ck-US":"chr",co:"co",cs:"cs","cs-CZ":"cs",cy:"cy","cy-GB":"cy",da:"da","da-DK":"da",de:"de","de-AT":"de","de-DE":"de","de-CH":"de",dsb:"en",el:"el","el-GR":"el",en:"en","en-GB":"en","en-AU":"en","en-CA":"en","en-IE":"en","en-IN":"en","en-PI":"en","en-UD":"en","en-US":"en","en-ZA":"en","en@pirate":"en",eo:"eo","eo-EO":"eo",es:"es","es-AR":"es","es-419":"es","es-CL":"es","es-CO":"es","es-EC":"es","es-ES":"es","es-LA":"es","es-NI":"es","es-MX":"es","es-US":"es","es-VE":"es",et:"et","et-EE":"et",eu:"eu","eu-ES":"eu",fa:"fa","fa-IR":"fa","fb-LT":"en",ff:"en",fi:"fi","fi-FI":"fi","fo-FO":"fao",fr:"fr","fr-CA":"fr","fr-FR":"fr","fr-BE":"fr","fr-CH":"fr","fy-NL":"fy",ga:"ga","ga-IE":"ga",gd:"gd",gl:"gl","gl-ES":"gl","gn-PY":"grn","gu-IN":"gu","gx-GR":"el",ha:"ha",haw:"haw",he:"he","he-IL":"he",hi:"hi","hi-IN":"hi",hmn:"hmn",hr:"hr","hr-HR":"hr",hsb:"en",ht:"ht",hu:"hu","hu-HU":"hu","hy-AM":"hy",id:"id","id-ID":"id",ig:"ig",is:"is","is-IS":"is",it:"it","it-IT":"it",iw:"he",ja:"ja","ja-JP":"ja","jv-ID":"jw","ka-GE":"ka","kk-KZ":"kk",km:"km","km-KH":"km",kab:"kab",kn:"kn","kn-IN":"kn",ko:"ko","ko-KR":"ko","ku-TR":"ku",ky:"ky",la:"la","la-VA":"la",lb:"lb","li-NL":"lim",lo:"lo",lt:"lt","lt-LT":"lt",lv:"lv","lv-LV":"lv",mai:"mai","mg-MG":"mg",mi:"mi",mk:"mk","mk-MK":"mk",ml:"ml","ml-IN":"ml","mn-MN":"mn",mr:"mr","mr-IN":"mr",ms:"ms","ms-MY":"ms",mt:"mt","mt-MT":"mt",my:"my",no:"no",nb:"no","nb-NO":"no",ne:"ne","ne-NP":"ne",nl:"nl","nl-BE":"nl","nl-NL":"nl","nn-NO":"no",ny:"ny",oc:"oci","or-IN":"or",pa:"pa","pa-IN":"pa",pl:"pl","pl-PL":"pl","ps-AF":"ps",pt:"pt","pt-BR":"pt","pt-PT":"pt","qu-PE":"que","rm-CH":"roh",ro:"ro","ro-RO":"ro",ru:"ru","ru-RU":"ru","sa-IN":"san",sd:"sd","se-NO":"sme","si-LK":"si",sk:"sk","sk-SK":"sk",sl:"sl","sl-SI":"sl",sm:"sm",sn:"sn","so-SO":"so",sq:"sq","sq-AL":"sq",sr:"sr","sr-RS":"sr",st:"st",su:"su",sv:"sv","sv-SE":"sv",sw:"sw","sw-KE":"sw",ta:"ta","ta-IN":"ta",te:"te","te-IN":"te",tg:"tg","tg-TJ":"tg",th:"th","th-TH":"th",tl:"fil","tl-PH":"fil",tlh:"tlh",tr:"tr","tr-TR":"tr","tt-RU":"tat",uk:"uk","uk-UA":"uk",ur:"ur","ur-PK":"ur",uz:"uz","uz-UZ":"uz",vi:"vi","vi-VN":"vi","xh-ZA":"xh",yi:"yi","yi-DE":"yi",yo:"yo",zh:"zh-CN","zh-Hans":"zh-CN","zh-Hant":"zh-TW","zh-CN":"zh-CN","zh-HK":"zh-TW","zh-SG":"zh-CN","zh-TW":"zh-TW","zu-ZA":"zu"}[chrome.i18n.getUILanguage()]},OtherSettings:{MutualTranslate:!1,SelectTranslate:!0,TranslateAfterDblClick:!1,TranslateAfterSelect:!1,CancelTextSelection:!1,UseGoogleAnalytics:!1},DefaultTranslator:"GoogleTranslate",DefaultPageTranslator:"GooglePageTranslate",HybridTranslatorConfig:{translators:["BingTranslate","GoogleTranslate"],selections:{originalText:"GoogleTranslate",mainMeaning:"GoogleTranslate",tPronunciation:"GoogleTranslate",sPronunciation:"GoogleTranslate",detailedMeanings:"BingTranslate",definitions:"GoogleTranslate",examples:"GoogleTranslate"}},TranslateResultFilter:{mainMeaning:!0,originalText:!0,tPronunciation:!0,sPronunciation:!0,tPronunciationIcon:!0,sPronunciationIcon:!0,detailedMeanings:!0,definitions:!0,examples:!0},ContentDisplayOrder:["mainMeaning","originalText","detailedMeanings","definitions","examples"],HidePageTranslatorBanner:!1};function a(e,t){return new Promise((n=>{if("string"==typeof e)e=[e];else if(void 0===e){e=[];for(let n in t)e.push(n)}chrome.storage.sync.get(e,(a=>{let s=!1;for(let n of e)a[n]||("function"==typeof t&&(t=t(e)),a[n]=t[n],s=!0);s?chrome.storage.sync.set(a,(()=>n(a))):n(a)}))}))}const s=new class{constructor(){this._services=new Map,this._eventManager=new class{constructor(){this._handlerID=1,this._eventToHandlerIDs=new Map,this._handlerIDToHandler=new Map}on(e,t){const n=this._allocHandlerID();this._handlerIDToHandler.set(n,t),this._eventToHandlerIDs.has(e)?this._eventToHandlerIDs.get(e).add(n):this._eventToHandlerIDs.set(e,new Set([n]));let a=!1;return(()=>{a?console.warn("You shouldn't call the canceler more than once!"):(a=!0,this._off(e,n))}).bind(this)}emit(e,t,n){const a=this._eventToHandlerIDs.get(e);if(a)for(const e of a){const a=this._handlerIDToHandler.get(e);a&&a(t,n)}}_allocHandlerID(){for(;this._handlerIDToHandler.has(this._handlerID);)this._handlerID=(this._handlerID+1)%Number.MAX_SAFE_INTEGER;return this._handlerID}_off(e,t){const n=this._eventToHandlerIDs.get(e);n&&n.delete(t),this._handlerIDToHandler.delete(t)}},chrome.runtime.onMessage.addListener(((e,t,n)=>{let a=JSON.parse(e);if(a&&a.type)switch(a.type){case"event":this._eventManager.emit(a.event,a.detail,t),n&&n();break;case"service":{const e=this._services.get(a.service);if(!e)break;return e(a.params,t).then((e=>n&&n(e))),!0}default:console.error(`Unknown message type: ${e.type}`)}else console.error(`Bad message: ${e}`)}).bind(this))}provide(e,t){this._services.set(e,t)}request(e,t){const n=JSON.stringify({type:"service",service:e,params:t});return new Promise(((e,t)=>{chrome.runtime.sendMessage(n,(n=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e(n)}))}))}requestToTab(e,t,n){const a=this._getTabMessageSender();return a?a(e,JSON.stringify({type:"service",service:t,params:n})):Promise.reject("Can not send message to tabs in current context!")}on(e,t){return this._eventManager.on(e,t)}emit(e,t){let n=JSON.stringify({type:"event",event:e,detail:t});chrome.runtime.sendMessage(n,(()=>{chrome.runtime.lastError&&console.error(chrome.runtime.lastError)}))}emitToTabs(e,t,n){const a=this._getTabMessageSender();if(!a)return void console.error("Can not send message to tabs in current context!");"number"==typeof e&&(e=[e]);const s=JSON.stringify({type:"event",event:t,detail:n});for(let t of e)a(t,s).catch((e=>console.error(e)))}_getTabMessageSender(){return chrome.tabs&&chrome.tabs.sendMessage?(e,t)=>new Promise(((n,a)=>{chrome.tabs.sendMessage(e,t,(e=>{chrome.runtime.lastError?a(chrome.runtime.lastError):n(e)}))})):null}};let r=document.getElementById("sl"),o=document.getElementById("tl"),i=document.getElementById("exchange"),l=document.getElementById("mutual-translate");function c(e,t){s.emit("language_setting_update",{from:e,to:t}),u("languageSetting",{sl:e,tl:t}),"auto"===e?(l.checked=!1,l.disabled=!0,l.parentElement.title=chrome.i18n.getMessage("MutualTranslationWarning"),l.onchange()):l.disabled&&(l.disabled=!1,l.parentElement.title="")}function u(e,t){let n={};n[e]=t,chrome.storage.sync.set(n)}function h(){let e=document.getElementById("translate_input").value;""!==e.replace(/\s*/,"")?(document.getElementById("hint_message").style.display="none",s.request("translate",{text:e}).then((()=>{setTimeout((()=>{window.close()}),0)}))):document.getElementById("hint_message").style.display="inline"}function d(e,t){"auto"===t.value?e.style.color="gray":e.style.color="#4a8cf7"}function m(){if("auto"!==r.value){let e=o.value;o.value=r.value,r.value=e,c(r.value,o.value),y()}}function g(){let e=document.getElementById("setting"),t=document.getElementById("arrow-up"),n=document.getElementById("arrow-down");e.style.display&&"none"!=e.style.display?(e.style.display="none",n.style.display="inline",t.style.display="none",document.getElementById("translate_input").focus()):(e.style.display="block",n.style.display="none",t.style.display="inline",document.getElementById("tl").focus(),d(i,r))}function p(e){"13"==(e.charCode||e.keyCode)&&h()}function y(){let e=document.getElementById("translate_input"),t=r.options[r.selectedIndex].text,n=o.options[o.selectedIndex].text;"auto"!==r.options[r.selectedIndex].value&&l.checked?e.placeholder=`${t} <=> ${n}`:e.placeholder=`${t} ==> ${n}`}window.onload=function(){!function(){let e=document.getElementsByClassName("i18n");for(let t=0;t<e.length;t++){let n="beforeEnd";e[t].hasAttribute("data-insert-pos")&&(n=e[t].getAttribute("data-insert-pos")),e[t].insertAdjacentText(n,chrome.i18n.getMessage(e[t].getAttribute("data-i18n-name")))}}();const e=document.getElementById("page-translate");e&&e.parentNode&&e.parentNode.removeChild(e);let s=document.getElementById("arrow-up");document.getElementById("arrow-down").setAttribute("title",chrome.i18n.getMessage("Unfold")),s.setAttribute("title",chrome.i18n.getMessage("Fold")),r.onchange=function(){d(i,r),c(r.options[r.selectedIndex].value,o.options[o.selectedIndex].value),y()},o.onchange=function(){c(r.options[r.selectedIndex].value,o.options[o.selectedIndex].value),y()},i.onclick=m,l.onchange=()=>{a("OtherSettings",n).then((e=>{let t=e.OtherSettings;t.MutualTranslate=l.checked,u("OtherSettings",t)})),y()},a(["languageSetting","OtherSettings"],n).then((e=>{let n=e.OtherSettings,a=e.languageSetting;"auto"===a.sl?(l.disabled=!0,l.parentElement.title=chrome.i18n.getMessage("MutualTranslationWarning"),n.MutualTranslate&&(l.checked=!1,l.onchange())):(l.checked=n.MutualTranslate,l.parentElement.title="");for(let e in t){let n=e,s=chrome.i18n.getMessage(t[e]);a&&n==a.sl?r.options.add(new Option(s,n,!0,!0)):r.options.add(new Option(s,n)),a&&n==a.tl?o.options.add(new Option(s,n,!0,!0)):o.options.add(new Option(s,n))}y()})),document.getElementById("translateSubmit").addEventListener("click",h),document.addEventListener("keypress",p),document.getElementById("setting-switch").addEventListener("click",g)},chrome.commands.onCommand.addListener((e=>{switch(e){case"change_language_setting":g();break;case"exchange_source_target_lang":m();break;case"change_mutual_translate":l.click()}}))})();